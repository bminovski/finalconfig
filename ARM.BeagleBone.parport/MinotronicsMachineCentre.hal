# #######################################
#
# HAL file for BeagleBone + Panther cape with 3 steppers
#
# Derived from example BeBoPr-Bridge.hal
#
# ########################################

# Launch the setup script to make sure hardware setup looks good
loadusr -w ./setup.bridge.sh


# ###################################
# Core EMC/HAL Loads
# ###################################

# kinematics
loadrt trivkins

# motion controller, get name and thread periods from ini file
# trajectory planner
loadrt tp
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES tp=tp kins=trivkins

# load low-level drivers
loadrt hal_bb_gpio output_pins=813,926,942,911 input_pins=917,807,819,941,918
loadrt [PRUCONF](DRIVER) prucode=$(HAL_RTMOD_DIR)/[PRUCONF](PRUBIN) [PRUCONF](CONFIG) halname=hpg
# loadrt pid count=2
loadrt limit1 count=2
# loadrt pepper count=1
loadrt pwmgen output_type=0

# Python user-mode HAL module to read ADC value and generate a thermostat output for PWM
# t = Thermistor table (only epcos_B57560G1104 or 1 supported for now)
# a = analog input channel
# loadusr -Wn Therm ./ReadTemp.py -n Therm --num_chan 2 -t 1 1 -a 4 5

loadusr -W hal_manualtoolchange

# ################################################
# THREADS
# ################################################

addf hpg.capture-position                 servo-thread
addf bb_gpio.read                         base-thread
addf motion-command-handler               servo-thread
addf motion-controller                    servo-thread
# addf pid.0.do-pid-calcs                   servo-thread
# addf pid.1.do-pid-calcs                   servo-thread
addf limit1.0                             servo-thread
addf limit1.1                             servo-thread
addf hpg.update                           servo-thread
addf bb_gpio.write                        base-thread
# addf pepper.update			  base-thread
addf pwmgen.make-pulses 		  base-thread
addf pwmgen.update 			  servo-thread


# ######################################################
# Axis-of-motion Specific Configs (not the GUI)
# ######################################################


# ################
# X [0] Axis
# ################

# axis enable chain
newsig emcmot.00.enable bit
sets emcmot.00.enable FALSE

net emcmot.00.enable <= axis.0.amp-enable-out
net emcmot.00.enable => hpg.stepgen.00.enable
net emcmot.00.enable  bb_gpio.p9.out-26
setp bb_gpio.p9.out-26.invert 1

# position command and feedback
net emcmot.00.pos-cmd <= axis.0.motor-pos-cmd
net emcmot.00.pos-cmd => hpg.stepgen.00.position-cmd

net motor.00.pos-fb <= hpg.stepgen.00.position-fb
net motor.00.pos-fb => axis.0.motor-pos-fb


# timing parameters
setp hpg.stepgen.00.dirsetup        [AXIS_0]DIRSETUP
setp hpg.stepgen.00.dirhold         [AXIS_0]DIRHOLD

setp hpg.stepgen.00.steplen         [AXIS_0]STEPLEN
setp hpg.stepgen.00.stepspace       [AXIS_0]STEPSPACE

setp hpg.stepgen.00.position-scale  [AXIS_0]SCALE

setp hpg.stepgen.00.maxvel          [AXIS_0]STEPGEN_MAX_VEL
setp hpg.stepgen.00.maxaccel        [AXIS_0]STEPGEN_MAX_ACC

#setp hpg.stepgen.00.step_type       0
# P8.11
setp hpg.stepgen.00.steppin		811          
# P8.12 
setp hpg.stepgen.00.dirpin		812


# ################
# A [3] Axis
# ################

# axis enable chain
newsig emcmot.03.enable bit
sets emcmot.03.enable FALSE

net emcmot.03.enable <= axis.3.amp-enable-out
net emcmot.03.enable => hpg.stepgen.03.enable


# position command and feedback
net emcmot.03.pos-cmd <= axis.3.motor-pos-cmd
net emcmot.03.pos-cmd => hpg.stepgen.03.position-cmd

net motor.03.pos-fb <= hpg.stepgen.03.position-fb
net motor.03.pos-fb => axis.3.motor-pos-fb


# timing parameters
setp hpg.stepgen.03.dirsetup        [AXIS_3]DIRSETUP
setp hpg.stepgen.03.dirhold         [AXIS_3]DIRHOLD

setp hpg.stepgen.03.steplen         [AXIS_3]STEPLEN
setp hpg.stepgen.03.stepspace       [AXIS_3]STEPSPACE

setp hpg.stepgen.03.position-scale  [AXIS_3]SCALE

setp hpg.stepgen.03.maxvel          [AXIS_3]STEPGEN_MAX_VEL
setp hpg.stepgen.03.maxaccel        [AXIS_3]STEPGEN_MAX_ACC

#setp hpg.stepgen.03.step_type       0
# P8.8
setp hpg.stepgen.03.steppin          815
# P8.10
setp hpg.stepgen.03.dirpin           816


# ################
# C [5] Axis
# ################

# axis enable chain
newsig emcmot.05.enable bit
sets emcmot.05.enable FALSE

net emcmot.05.enable <= axis.5.amp-enable-out
net emcmot.05.enable => hpg.stepgen.05.enable


# position command and feedback
net emcmot.05.pos-cmd <= axis.5.motor-pos-cmd
net emcmot.05.pos-cmd => hpg.stepgen.05.position-cmd

net motor.05.pos-fb <= hpg.stepgen.05.position-fb
net motor.05.pos-fb => axis.5.motor-pos-fb


# timing parameters
setp hpg.stepgen.05.dirsetup        [AXIS_5]DIRSETUP
setp hpg.stepgen.05.dirhold         [AXIS_5]DIRHOLD

setp hpg.stepgen.05.steplen         [AXIS_5]STEPLEN
setp hpg.stepgen.05.stepspace       [AXIS_5]STEPSPACE

setp hpg.stepgen.05.position-scale  [AXIS_5]SCALE

setp hpg.stepgen.05.maxvel          [AXIS_5]STEPGEN_MAX_VEL
setp hpg.stepgen.05.maxaccel        [AXIS_5]STEPGEN_MAX_ACC

#setp hpg.stepgen.05.step_type       0
# P9.25 GPIO3_21
setp hpg.stepgen.05.steppin          925
# P9.13 GPIO0_31
setp hpg.stepgen.05.dirpin           913


# ################
# C [7] Axis
# ################

# axis enable chain
newsig emcmot.07.enable bit
sets emcmot.07.enable FALSE

net emcmot.07.enable <= axis.7.amp-enable-out
net emcmot.07.enable => hpg.stepgen.07.enable


# position command and feedback
net emcmot.07.pos-cmd <= axis.7.motor-pos-cmd
net emcmot.07.pos-cmd => hpg.stepgen.07.position-cmd

net motor.07.pos-fb <= hpg.stepgen.07.position-fb
net motor.07.pos-fb => axis.7.motor-pos-fb

# timing parameters
setp hpg.stepgen.07.dirsetup        [AXIS_7]DIRSETUP
setp hpg.stepgen.07.dirhold         [AXIS_7]DIRHOLD

setp hpg.stepgen.07.steplen         [AXIS_7]STEPLEN
setp hpg.stepgen.07.stepspace       [AXIS_7]STEPSPACE

setp hpg.stepgen.07.position-scale  [AXIS_7]SCALE

setp hpg.stepgen.07.maxvel          [AXIS_7]STEPGEN_MAX_VEL
setp hpg.stepgen.07.maxaccel        [AXIS_7]STEPGEN_MAX_ACC

#setp hpg.stepgen.07.step_type       0
# P9.25 GPIO3_21
setp hpg.stepgen.07.steppin          921
# P9.13 GPIO0_31
setp hpg.stepgen.07.dirpin           922





# ##################################################
# Standard I/O - EStop, Enables, Limit Switches, Etc
# ##################################################

# Standard inputs
#net in0 bb_gpio.p9.in-17 => motion.digital-in-00
#net in1 bb_gpio.p8.in-07 => motion.digital-in-01
#net in2 bb_gpio.p8.in-19 => motion.digital-in-02
#net in3 bb_gpio.p9.in-41 => motion.digital-in-03

# Standard outputs
#net out0 motion.digital-out-00 => bb_gpio.p9.out-26
#net out1 motion.digital-out-01 => bb_gpio.p9.out-26
#net out2 motion.digital-out-02 => bb_gpio.p9.out-17
#net out3 motion.digital-out-03 => bb_gpio.p9.out-18

# create a signal for the estop loopback
#net estop-loop iocontrol.0.user-enable-out => iocontrol.0.emc-enable-in
net estop-ext bb_gpio.p9.in-41 => iocontrol.0.emc-enable-in
#setp bb_gpio.p9.in-41.invert 1

# create signals for tool loading loopback
#net tool-prep-loop iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
#net tool-change-loop iocontrol.0.tool-change => iocontrol.0.tool-changed

# Spindle control
#net spindle-enable motion.spindle-on => bb_gpio.p9.out-11
#setp bb_gpio.p9.out-11.invert 1

# home switches

# invert the home input signals
setp bb_gpio.p9.in-17.invert 1
#setp bb_gpio.p8.in-07.invert 1
setp bb_gpio.p8.in-19.invert 1
#setp bb_gpio.p8.in-17.invert 1
setp bb_gpio.p9.in-18.invert 1

# wire the home inputs
net Xhome bb_gpio.p9.in-17 => axis.0.home-sw-in
net Chome bb_gpio.p8.in-19 => axis.5.home-sw-in
net Vhome bb_gpio.p9.in-18 => axis.7.home-sw-in
# net Ahome bb_gpio.p8.in-17 => axis.3.home-sw-in
# net Bhome bb_gpio.p9.in-23 => axis.4.home-sw-in

# ##################################################
# Spindle
# #################################################

setp pwmgen.0.pwm-freq 100.0
setp pwmgen.0.scale 24000
setp pwmgen.0.offset 0.0

net spindle-speed-cmd motion.spindle-speed-out => pwmgen.0.value
net spindle-on motion.spindle-on => pwmgen.0.enable
net spindle-pwm pwmgen.0.pwm => bb_gpio.p8.out-13
net spindle-at-speed => motion.spindle-at-speed
net spindle-fwd motion.spindle-forward => bb_gpio.p9.out-11
setp bb_gpio.p8.out-13.invert 1

#start haltalk server
loadusr -W haltalk


#HAL manual tool change

net tool-change iocontrol.0.tool-change => hal_manualtoolchange.change 
net tool-changed iocontrol.0.tool-changed <= hal_manualtoolchange.changed 
net tool-number iocontrol.0.tool-prep-number => hal_manualtoolchange.number
net tool-prepare-loopback iocontrol.0.tool-prepare => iocontrol.0.tool-prepared 
